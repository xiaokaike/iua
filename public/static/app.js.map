{"version":3,"sources":["webpack:///app.js","webpack:///webpack/bootstrap 7883084e0f41bb4b2f7c","webpack:///./src/main.js","webpack:///./src/conf.js","webpack:///./~/qr.js/lib/ErrorCorrectLevel.js","webpack:///./~/qr.js/lib/Polynomial.js","webpack:///./~/qr.js/lib/math.js","webpack:///./~/qr.js/lib/mode.js","webpack:///App.vue","webpack:///qrcode.vue","webpack:///./~/qr.js/index.js","webpack:///./~/qr.js/lib/8BitByte.js","webpack:///./~/qr.js/lib/BitBuffer.js","webpack:///./~/qr.js/lib/QRCode.js","webpack:///./~/qr.js/lib/RSBlock.js","webpack:///./~/qr.js/lib/util.js","webpack:///./src/App.vue?d818","webpack:///./src/components/qrcode.vue?0d0b","webpack:///./src/App.vue","webpack:///./src/components/qrcode.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","_conf","_conf2","map","el","components","App","console","log","originUrl","socket","io","connect","emit","cid","on","data","Object","defineProperty","value","window","location","origin","localStorage","getItem","_uuid","setItem","config","L","M","Q","H","QRPolynomial","num","shift","undefined","length","Error","offset","this","Array","i","math","prototype","get","index","getLength","multiply","e","j","gexp","glog","mod","ratio","QRMath","n","LOG_TABLE","EXP_TABLE","MODE_NUMBER","MODE_ALPHA_NUM","MODE_8BIT_BYTE","MODE_KANJI","_qrcode","_qrcode2","title","devices","info","ua","deviceUrl","qrcode","created","methods","fetch","onDevices","_resetTab","$data","sel","update","push","forEach","item","getBackingStorePixelRatio","ctx","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","_qr","_qr2","props","val","String","size","level","bgc","fgc","ready","$qr","$els","qr","getContext","cells","tileW","tileH","scale","devicePixelRatio","height","width","row","rdx","cell","cdx","fillStyle","w","Math","ceil","floor","h","fillRect","round","QRCode","ErrorCorrectLevel","opt","typeNumber","errorCorrectLevel","addData","make","QR8bitByte","mode","buffer","write","put","charCodeAt","QRBitBuffer","bufIndex","putBit","getLengthInBits","bit","moduleCount","dataCache","dataList","BitByte","RSBlock","BitBuffer","util","Polynomial","proto","newData","isDark","col","getModuleCount","rsBlocks","getRSBlocks","totalDataCount","dataCount","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","minLostPoint","pattern","lostPoint","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","cs","y","x","dark","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","bits","getBCHTypeNumber","getBCHTypeInfo","inc","bitIndex","byteIndex","mask","getMask","PAD0","PAD1","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","totalCodeCount","QRRSBlock","ECL","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","count","Mode","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","QRUtil","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","type","qrCode","sameCount","darkCount","abs","__vue_script__","__vue_template__","options","template","global","set","key","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","isReserved","str","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","l","arguments","apply","toArray","start","ret","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","head","tail","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","processFilterArg","dir","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","inSingle","inDouble","curly","square","paren","prev","expression","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","queueIndex","watcher","run","pushWatcher","user","splice","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","kebab","setObjectClasses","toggleClasses","stringToObject","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"app.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(20);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(18);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _conf = __webpack_require__(1);\n\t\n\tvar _conf2 = _interopRequireDefault(_conf);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar map = {};\n\t\n\tfunction _uuid() {\n\t  function s4() {\n\t    return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n\t  }\n\t  return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4();\n\t}\n\t\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: { App: _App2.default }\n\t});\n\t\n\tconsole.log(_conf2.default.originUrl);\n\t\n\tvar socket = io.connect(_conf2.default.originUrl + '/client');\n\t\n\tsocket.emit('client:init', {\n\t  cid: _conf2.default.cid\n\t});\n\t\n\tsocket.on('client:update' + _conf2.default.cid, function (data) {\n\t  if (!map[data.id]) {\n\t    map[data.id] = true;\n\t    console.log(data);\n\t  }\n\t});\n\t\n\tconsole.log('--');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t\n\tvar originUrl = window.location.origin;\n\tvar cid = localStorage.getItem('__iua_cid');\n\t\n\tif (!cid) {\n\t  cid = _uuid();\n\t  localStorage.setItem('__iua_cid', cid);\n\t}\n\t\n\tvar config = {\n\t  cid: cid,\n\t\n\t  originUrl: originUrl\n\t\n\t};\n\t\n\texports.default = config;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\tL : 1,\n\t\tM : 0,\n\t\tQ : 3,\n\t\tH : 2\n\t};\n\t\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar math = __webpack_require__(4);\n\t\n\tfunction QRPolynomial(num, shift) {\n\t\n\t\tif (num.length == undefined) {\n\t\t\tthrow new Error(num.length + \"/\" + shift);\n\t\t}\n\t\n\t\tvar offset = 0;\n\t\n\t\twhile (offset < num.length && num[offset] == 0) {\n\t\t\toffset++;\n\t\t}\n\t\n\t\tthis.num = new Array(num.length - offset + shift);\n\t\tfor (var i = 0; i < num.length - offset; i++) {\n\t\t\tthis.num[i] = num[i + offset];\n\t\t}\n\t}\n\t\n\tQRPolynomial.prototype = {\n\t\n\t\tget : function(index) {\n\t\t\treturn this.num[index];\n\t\t},\n\t\t\n\t\tgetLength : function() {\n\t\t\treturn this.num.length;\n\t\t},\n\t\t\n\t\tmultiply : function(e) {\n\t\t\n\t\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\t\n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\treturn new QRPolynomial(num, 0);\n\t\t},\n\t\t\n\t\tmod : function(e) {\n\t\t\n\t\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\n\t\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\t\n\t\t\tvar num = new Array(this.getLength() );\n\t\t\t\n\t\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\t\tnum[i] = this.get(i);\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t\t}\n\t\t\n\t\t\t// recursive call\n\t\t\treturn new QRPolynomial(num, 0).mod(e);\n\t\t}\n\t};\n\t\n\tmodule.exports = QRPolynomial;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar QRMath = {\n\t\n\t\tglog : function(n) {\n\t\t\n\t\t\tif (n < 1) {\n\t\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t\t}\n\t\t\t\n\t\t\treturn QRMath.LOG_TABLE[n];\n\t\t},\n\t\t\n\t\tgexp : function(n) {\n\t\t\n\t\t\twhile (n < 0) {\n\t\t\t\tn += 255;\n\t\t\t}\n\t\t\n\t\t\twhile (n >= 256) {\n\t\t\t\tn -= 255;\n\t\t\t}\n\t\t\n\t\t\treturn QRMath.EXP_TABLE[n];\n\t\t},\n\t\t\n\t\tEXP_TABLE : new Array(256),\n\t\t\n\t\tLOG_TABLE : new Array(256)\n\t\n\t};\n\t\t\n\tfor (var i = 0; i < 8; i++) {\n\t\tQRMath.EXP_TABLE[i] = 1 << i;\n\t}\n\tfor (var i = 8; i < 256; i++) {\n\t\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t\t^ QRMath.EXP_TABLE[i - 8];\n\t}\n\tfor (var i = 0; i < 255; i++) {\n\t\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n\t}\n\t\n\tmodule.exports = QRMath;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\tMODE_NUMBER :\t\t1 << 0,\n\t\tMODE_ALPHA_NUM : \t1 << 1,\n\t\tMODE_8BIT_BYTE : \t1 << 2,\n\t\tMODE_KANJI :\t\t1 << 3\n\t};\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _qrcode = __webpack_require__(19);\n\t\n\tvar _qrcode2 = _interopRequireDefault(_qrcode);\n\t\n\tvar _conf = __webpack_require__(1);\n\t\n\tvar _conf2 = _interopRequireDefault(_conf);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  data: function data() {\n\t    return {\n\t      title: 'dashboard',\n\t      cid: _conf2.default.cid,\n\t      devices: [],\n\t      info: {\n\t        ua: ''\n\t      },\n\t      deviceUrl: ''\n\t    };\n\t  },\n\t\n\t  components: {\n\t    qrcode: _qrcode2.default\n\t  },\n\t  created: function created() {\n\t    this.deviceUrl = _conf2.default.originUrl + '/device/' + _conf2.default.cid;\n\t  },\n\t\n\t  methods: {\n\t    fetch: function fetch() {},\n\t    onDevices: function onDevices(e) {\n\t      console.log(e);\n\t      this._resetTab();\n\t      e.$data.sel = true;\n\t      this.info = e.$data.info;\n\t    },\n\t    update: function update(data) {\n\t      this._resetTab();\n\t      data.sel = true;\n\t      this.devices.push(data);\n\t      this.info = data.info;\n\t    },\n\t    _resetTab: function _resetTab() {\n\t      this.devices.forEach(function (item) {\n\t        item.sel = false;\n\t      });\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _qr = __webpack_require__(10);\n\t\n\tvar _qr2 = _interopRequireDefault(_qr);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    val: String,\n\t    size: 10,\n\t\n\t    level: String,\n\t    bgc: String,\n\t    fgc: String\n\t  },\n\t  ready: function ready() {\n\t    var size = this.size;\n\t    var bgc = this.bgc;\n\t    var fgc = this.fgc;\n\t    var $qr = this.$els.qr;\n\t\n\t    var qrcode = (0, _qr2.default)(this.val);\n\t\n\t    var ctx = $qr.getContext('2d');\n\t    var cells = qrcode.modules;\n\t    var tileW = size / cells.length;\n\t    var tileH = size / cells.length;\n\t    var scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx);\n\t\n\t    $qr.height = $qr.width = size * scale;\n\t    ctx.scale(scale, scale);\n\t\n\t    cells.forEach(function (row, rdx) {\n\t      row.forEach(function (cell, cdx) {\n\t        ctx.fillStyle = cell ? fgc : bgc;\n\t        var w = Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW);\n\t        var h = Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH);\n\t        ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h);\n\t      });\n\t    });\n\t  }\n\t};\n\t\n\t\n\tfunction getBackingStorePixelRatio(ctx) {\n\t  return ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n\t}\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar QRCode = __webpack_require__(13);\r\n\tvar ErrorCorrectLevel = __webpack_require__(2);\r\n\t\r\n\tvar qrcode = function(data, opt) {\r\n\t\topt = opt || {};\r\n\t\tvar qr = new QRCode(opt.typeNumber || -1,\r\n\t\t\t\t\t\t\topt.errorCorrectLevel || ErrorCorrectLevel.H);\r\n\t\tqr.addData(data);\r\n\t\tqr.make();\r\n\t\r\n\t\treturn qr;\r\n\t};\r\n\t\r\n\tqrcode.ErrorCorrectLevel = ErrorCorrectLevel;\r\n\t\r\n\tmodule.exports = qrcode;\r\n\t\r\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mode = __webpack_require__(5);\n\t\n\tfunction QR8bitByte(data) {\n\t\tthis.mode = mode.MODE_8BIT_BYTE;\n\t\tthis.data = data;\n\t}\n\t\n\tQR8bitByte.prototype = {\n\t\n\t\tgetLength : function(buffer) {\n\t\t\treturn this.data.length;\n\t\t},\n\t\t\n\t\twrite : function(buffer) {\n\t\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t\t// not JIS ...\n\t\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t\t}\n\t\t}\n\t};\n\t\n\tmodule.exports = QR8bitByte;\n\t\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tfunction QRBitBuffer() {\n\t\tthis.buffer = new Array();\n\t\tthis.length = 0;\n\t}\n\t\n\tQRBitBuffer.prototype = {\n\t\n\t\tget : function(index) {\n\t\t\tvar bufIndex = Math.floor(index / 8);\n\t\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t\t},\n\t\t\n\t\tput : function(num, length) {\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t\t}\n\t\t},\n\t\t\n\t\tgetLengthInBits : function() {\n\t\t\treturn this.length;\n\t\t},\n\t\t\n\t\tputBit : function(bit) {\n\t\t\n\t\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\t\tif (this.buffer.length <= bufIndex) {\n\t\t\t\tthis.buffer.push(0);\n\t\t\t}\n\t\t\n\t\t\tif (bit) {\n\t\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t\t}\n\t\t\n\t\t\tthis.length++;\n\t\t}\n\t};\n\t\n\tmodule.exports = QRBitBuffer;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar BitByte = __webpack_require__(11);\n\tvar RSBlock = __webpack_require__(14);\n\tvar BitBuffer = __webpack_require__(12);\n\tvar util = __webpack_require__(15);\n\tvar Polynomial = __webpack_require__(3);\n\t\n\tfunction QRCode(typeNumber, errorCorrectLevel) {\n\t\tthis.typeNumber = typeNumber;\n\t\tthis.errorCorrectLevel = errorCorrectLevel;\n\t\tthis.modules = null;\n\t\tthis.moduleCount = 0;\n\t\tthis.dataCache = null;\n\t\tthis.dataList = [];\n\t}\n\t\n\t// for client side minification\n\tvar proto = QRCode.prototype;\n\t\n\tproto.addData = function(data) {\n\t\tvar newData = new BitByte(data);\n\t\tthis.dataList.push(newData);\n\t\tthis.dataCache = null;\n\t};\n\t\n\tproto.isDark = function(row, col) {\n\t\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\t\tthrow new Error(row + \",\" + col);\n\t\t}\n\t\treturn this.modules[row][col];\n\t};\n\t\n\tproto.getModuleCount = function() {\n\t\treturn this.moduleCount;\n\t};\n\t\n\tproto.make = function() {\n\t\t// Calculate automatically typeNumber if provided is < 1\n\t\tif (this.typeNumber < 1 ){\n\t\t\tvar typeNumber = 1;\n\t\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\t\n\t\t\t\tvar buffer = new BitBuffer();\n\t\t\t\tvar totalDataCount = 0;\n\t\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t\t}\n\t\n\t\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\t\tvar data = this.dataList[i];\n\t\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\t\tdata.write(buffer);\n\t\t\t\t}\n\t\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.typeNumber = typeNumber;\n\t\t}\n\t\tthis.makeImpl(false, this.getBestMaskPattern() );\n\t};\n\t\n\tproto.makeImpl = function(test, maskPattern) {\n\t\t\n\t\tthis.moduleCount = this.typeNumber * 4 + 17;\n\t\tthis.modules = new Array(this.moduleCount);\n\t\t\n\t\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\t\n\t\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\t\n\t\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t\t}\n\t\t}\n\t\n\t\tthis.setupPositionProbePattern(0, 0);\n\t\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\t\tthis.setupPositionAdjustPattern();\n\t\tthis.setupTimingPattern();\n\t\tthis.setupTypeInfo(test, maskPattern);\n\t\t\n\t\tif (this.typeNumber >= 7) {\n\t\t\tthis.setupTypeNumber(test);\n\t\t}\n\t\n\t\tif (this.dataCache == null) {\n\t\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t\t}\n\t\n\t\tthis.mapData(this.dataCache, maskPattern);\n\t};\n\t\n\tproto.setupPositionProbePattern = function(row, col)  {\n\t\t\n\t\tfor (var r = -1; r <= 7; r++) {\n\t\t\t\n\t\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\t\n\t\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\t\n\t\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\t\n\t\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t}\n\t\t\t}\t\t\n\t\t}\t\t\n\t};\n\t\n\tproto.getBestMaskPattern = function() {\n\t\n\t\tvar minLostPoint = 0;\n\t\tvar pattern = 0;\n\t\n\t\tfor (var i = 0; i < 8; i++) {\n\t\t\t\n\t\t\tthis.makeImpl(true, i);\n\t\n\t\t\tvar lostPoint = util.getLostPoint(this);\n\t\n\t\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\t\tminLostPoint = lostPoint;\n\t\t\t\tpattern = i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn pattern;\n\t};\n\t\n\tproto.createMovieClip = function(target_mc, instance_name, depth) {\n\t\n\t\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\t\tvar cs = 1;\n\t\n\t\tthis.make();\n\t\n\t\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\t\n\t\t\tvar y = row * cs;\n\t\t\t\n\t\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\t\n\t\t\t\tvar x = col * cs;\n\t\t\t\tvar dark = this.modules[row][col];\n\t\t\t\n\t\t\t\tif (dark) {\n\t\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\t\tqr_mc.endFill();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn qr_mc;\n\t};\n\t\n\tproto.setupTimingPattern = function() {\n\t\t\n\t\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\t\tif (this.modules[r][6] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[r][6] = (r % 2 == 0);\n\t\t}\n\t\n\t\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\t\tif (this.modules[6][c] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis.modules[6][c] = (c % 2 == 0);\n\t\t}\n\t};\n\t\n\tproto.setupPositionAdjustPattern = function() {\n\t\n\t\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\t\n\t\tfor (var i = 0; i < pos.length; i++) {\n\t\t\n\t\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\t\n\t\t\t\tvar row = pos[i];\n\t\t\t\tvar col = pos[j];\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\t\n\t\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tproto.setupTypeNumber = function(test) {\n\t\n\t\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\t\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t\t}\n\t\n\t\tfor (var i = 0; i < 18; i++) {\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t\t}\n\t};\n\t\n\tproto.setupTypeInfo = function(test, maskPattern) {\n\t\n\t\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\t\tvar bits = util.getBCHTypeInfo(data);\n\t\n\t\t// vertical\t\t\n\t\tfor (var i = 0; i < 15; i++) {\n\t\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\n\t\t\tif (i < 6) {\n\t\t\t\tthis.modules[i][8] = mod;\n\t\t\t} else if (i < 8) {\n\t\t\t\tthis.modules[i + 1][8] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// horizontal\n\t\tfor (var i = 0; i < 15; i++) {\n\t\n\t\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\t\n\t\t\tif (i < 8) {\n\t\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t\t} else if (i < 9) {\n\t\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t\t} else {\n\t\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t\t}\n\t\t}\n\t\n\t\t// fixed module\n\t\tthis.modules[this.moduleCount - 8][8] = (!test);\n\t};\n\t\n\tproto.mapData = function(data, maskPattern) {\n\t\t\n\t\tvar inc = -1;\n\t\tvar row = this.moduleCount - 1;\n\t\tvar bitIndex = 7;\n\t\tvar byteIndex = 0;\n\t\t\n\t\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\t\n\t\t\tif (col == 6) col--;\n\t\n\t\t\twhile (true) {\n\t\n\t\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\t\n\t\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar dark = false;\n\t\n\t\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\t\n\t\t\t\t\t\tif (mask) {\n\t\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\t\tbitIndex--;\n\t\n\t\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\trow += inc;\n\t\n\t\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\t\trow -= inc;\n\t\t\t\t\tinc = -inc;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tQRCode.PAD0 = 0xEC;\n\tQRCode.PAD1 = 0x11;\n\t\n\tQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\t\n\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\t\n\t\tvar buffer = new BitBuffer();\n\t\t\n\t\tfor (var i = 0; i < dataList.length; i++) {\n\t\t\tvar data = dataList[i];\n\t\t\tbuffer.put(data.mode, 4);\n\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\tdata.write(buffer);\n\t\t}\n\t\n\t\t// calc num max data.\n\t\tvar totalDataCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t}\n\t\n\t\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t\t+ buffer.getLengthInBits()\n\t\t\t\t+ \">\"\n\t\t\t\t+  totalDataCount * 8\n\t\t\t\t+ \")\");\n\t\t}\n\t\n\t\t// end code\n\t\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\t\tbuffer.put(0, 4);\n\t\t}\n\t\n\t\t// padding\n\t\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\t\tbuffer.putBit(false);\n\t\t}\n\t\n\t\t// padding\n\t\twhile (true) {\n\t\t\t\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\t\n\t\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tbuffer.put(QRCode.PAD1, 8);\n\t\t}\n\t\n\t\treturn QRCode.createBytes(buffer, rsBlocks);\n\t};\n\t\n\tQRCode.createBytes = function(buffer, rsBlocks) {\n\t\n\t\tvar offset = 0;\n\t\t\n\t\tvar maxDcCount = 0;\n\t\tvar maxEcCount = 0;\n\t\t\n\t\tvar dcdata = new Array(rsBlocks.length);\n\t\tvar ecdata = new Array(rsBlocks.length);\n\t\t\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\n\t\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\t\n\t\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\t\n\t\t\tdcdata[r] = new Array(dcCount);\n\t\t\t\n\t\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t\t}\n\t\t\toffset += dcCount;\n\t\t\t\n\t\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\t\n\t\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n\t            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t\t}\n\t\n\t\t}\n\t\t\n\t\tvar totalCodeCount = 0;\n\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t\t}\n\t\n\t\tvar data = new Array(totalCodeCount);\n\t\tvar index = 0;\n\t\n\t\tfor (var i = 0; i < maxDcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < dcdata[r].length) {\n\t\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfor (var i = 0; i < maxEcCount; i++) {\n\t\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\t\tif (i < ecdata[r].length) {\n\t\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn data;\n\t};\n\t\n\tmodule.exports = QRCode;\n\t\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// ErrorCorrectLevel\n\tvar ECL = __webpack_require__(2);\n\t\n\tfunction QRRSBlock(totalCount, dataCount) {\n\t\tthis.totalCount = totalCount;\n\t\tthis.dataCount  = dataCount;\n\t}\n\t\n\tQRRSBlock.RS_BLOCK_TABLE = [\n\t\n\t\t// L\n\t\t// M\n\t\t// Q\n\t\t// H\n\t\n\t\t// 1\n\t\t[1, 26, 19],\n\t\t[1, 26, 16],\n\t\t[1, 26, 13],\n\t\t[1, 26, 9],\n\t\t\n\t\t// 2\n\t\t[1, 44, 34],\n\t\t[1, 44, 28],\n\t\t[1, 44, 22],\n\t\t[1, 44, 16],\n\t\n\t\t// 3\n\t\t[1, 70, 55],\n\t\t[1, 70, 44],\n\t\t[2, 35, 17],\n\t\t[2, 35, 13],\n\t\n\t\t// 4\t\t\n\t\t[1, 100, 80],\n\t\t[2, 50, 32],\n\t\t[2, 50, 24],\n\t\t[4, 25, 9],\n\t\t\n\t\t// 5\n\t\t[1, 134, 108],\n\t\t[2, 67, 43],\n\t\t[2, 33, 15, 2, 34, 16],\n\t\t[2, 33, 11, 2, 34, 12],\n\t\t\n\t\t// 6\n\t\t[2, 86, 68],\n\t\t[4, 43, 27],\n\t\t[4, 43, 19],\n\t\t[4, 43, 15],\n\t\t\n\t\t// 7\t\t\n\t\t[2, 98, 78],\n\t\t[4, 49, 31],\n\t\t[2, 32, 14, 4, 33, 15],\n\t\t[4, 39, 13, 1, 40, 14],\n\t\t\n\t\t// 8\n\t\t[2, 121, 97],\n\t\t[2, 60, 38, 2, 61, 39],\n\t\t[4, 40, 18, 2, 41, 19],\n\t\t[4, 40, 14, 2, 41, 15],\n\t\t\n\t\t// 9\n\t\t[2, 146, 116],\n\t\t[3, 58, 36, 2, 59, 37],\n\t\t[4, 36, 16, 4, 37, 17],\n\t\t[4, 36, 12, 4, 37, 13],\n\t\t\n\t\t// 10\t\t\n\t\t[2, 86, 68, 2, 87, 69],\n\t\t[4, 69, 43, 1, 70, 44],\n\t\t[6, 43, 19, 2, 44, 20],\n\t\t[6, 43, 15, 2, 44, 16],\n\t\n\t\t// 11\n\t\t[4, 101, 81],\n\t\t[1, 80, 50, 4, 81, 51],\n\t\t[4, 50, 22, 4, 51, 23],\n\t\t[3, 36, 12, 8, 37, 13],\n\t\n\t\t// 12\n\t\t[2, 116, 92, 2, 117, 93],\n\t\t[6, 58, 36, 2, 59, 37],\n\t\t[4, 46, 20, 6, 47, 21],\n\t\t[7, 42, 14, 4, 43, 15],\n\t\n\t\t// 13\n\t\t[4, 133, 107],\n\t\t[8, 59, 37, 1, 60, 38],\n\t\t[8, 44, 20, 4, 45, 21],\n\t\t[12, 33, 11, 4, 34, 12],\n\t\n\t\t// 14\n\t\t[3, 145, 115, 1, 146, 116],\n\t\t[4, 64, 40, 5, 65, 41],\n\t\t[11, 36, 16, 5, 37, 17],\n\t\t[11, 36, 12, 5, 37, 13],\n\t\n\t\t// 15\n\t\t[5, 109, 87, 1, 110, 88],\n\t\t[5, 65, 41, 5, 66, 42],\n\t\t[5, 54, 24, 7, 55, 25],\n\t\t[11, 36, 12],\n\t\n\t\t// 16\n\t\t[5, 122, 98, 1, 123, 99],\n\t\t[7, 73, 45, 3, 74, 46],\n\t\t[15, 43, 19, 2, 44, 20],\n\t\t[3, 45, 15, 13, 46, 16],\n\t\n\t\t// 17\n\t\t[1, 135, 107, 5, 136, 108],\n\t\t[10, 74, 46, 1, 75, 47],\n\t\t[1, 50, 22, 15, 51, 23],\n\t\t[2, 42, 14, 17, 43, 15],\n\t\n\t\t// 18\n\t\t[5, 150, 120, 1, 151, 121],\n\t\t[9, 69, 43, 4, 70, 44],\n\t\t[17, 50, 22, 1, 51, 23],\n\t\t[2, 42, 14, 19, 43, 15],\n\t\n\t\t// 19\n\t\t[3, 141, 113, 4, 142, 114],\n\t\t[3, 70, 44, 11, 71, 45],\n\t\t[17, 47, 21, 4, 48, 22],\n\t\t[9, 39, 13, 16, 40, 14],\n\t\n\t\t// 20\n\t\t[3, 135, 107, 5, 136, 108],\n\t\t[3, 67, 41, 13, 68, 42],\n\t\t[15, 54, 24, 5, 55, 25],\n\t\t[15, 43, 15, 10, 44, 16],\n\t\n\t\t// 21\n\t\t[4, 144, 116, 4, 145, 117],\n\t\t[17, 68, 42],\n\t\t[17, 50, 22, 6, 51, 23],\n\t\t[19, 46, 16, 6, 47, 17],\n\t\n\t\t// 22\n\t\t[2, 139, 111, 7, 140, 112],\n\t\t[17, 74, 46],\n\t\t[7, 54, 24, 16, 55, 25],\n\t\t[34, 37, 13],\n\t\n\t\t// 23\n\t\t[4, 151, 121, 5, 152, 122],\n\t\t[4, 75, 47, 14, 76, 48],\n\t\t[11, 54, 24, 14, 55, 25],\n\t\t[16, 45, 15, 14, 46, 16],\n\t\n\t\t// 24\n\t\t[6, 147, 117, 4, 148, 118],\n\t\t[6, 73, 45, 14, 74, 46],\n\t\t[11, 54, 24, 16, 55, 25],\n\t\t[30, 46, 16, 2, 47, 17],\n\t\n\t\t// 25\n\t\t[8, 132, 106, 4, 133, 107],\n\t\t[8, 75, 47, 13, 76, 48],\n\t\t[7, 54, 24, 22, 55, 25],\n\t\t[22, 45, 15, 13, 46, 16],\n\t\n\t\t// 26\n\t\t[10, 142, 114, 2, 143, 115],\n\t\t[19, 74, 46, 4, 75, 47],\n\t\t[28, 50, 22, 6, 51, 23],\n\t\t[33, 46, 16, 4, 47, 17],\n\t\n\t\t// 27\n\t\t[8, 152, 122, 4, 153, 123],\n\t\t[22, 73, 45, 3, 74, 46],\n\t\t[8, 53, 23, 26, 54, 24],\n\t\t[12, 45, 15, 28, 46, 16],\n\t\n\t\t// 28\n\t\t[3, 147, 117, 10, 148, 118],\n\t\t[3, 73, 45, 23, 74, 46],\n\t\t[4, 54, 24, 31, 55, 25],\n\t\t[11, 45, 15, 31, 46, 16],\n\t\n\t\t// 29\n\t\t[7, 146, 116, 7, 147, 117],\n\t\t[21, 73, 45, 7, 74, 46],\n\t\t[1, 53, 23, 37, 54, 24],\n\t\t[19, 45, 15, 26, 46, 16],\n\t\n\t\t// 30\n\t\t[5, 145, 115, 10, 146, 116],\n\t\t[19, 75, 47, 10, 76, 48],\n\t\t[15, 54, 24, 25, 55, 25],\n\t\t[23, 45, 15, 25, 46, 16],\n\t\n\t\t// 31\n\t\t[13, 145, 115, 3, 146, 116],\n\t\t[2, 74, 46, 29, 75, 47],\n\t\t[42, 54, 24, 1, 55, 25],\n\t\t[23, 45, 15, 28, 46, 16],\n\t\n\t\t// 32\n\t\t[17, 145, 115],\n\t\t[10, 74, 46, 23, 75, 47],\n\t\t[10, 54, 24, 35, 55, 25],\n\t\t[19, 45, 15, 35, 46, 16],\n\t\n\t\t// 33\n\t\t[17, 145, 115, 1, 146, 116],\n\t\t[14, 74, 46, 21, 75, 47],\n\t\t[29, 54, 24, 19, 55, 25],\n\t\t[11, 45, 15, 46, 46, 16],\n\t\n\t\t// 34\n\t\t[13, 145, 115, 6, 146, 116],\n\t\t[14, 74, 46, 23, 75, 47],\n\t\t[44, 54, 24, 7, 55, 25],\n\t\t[59, 46, 16, 1, 47, 17],\n\t\n\t\t// 35\n\t\t[12, 151, 121, 7, 152, 122],\n\t\t[12, 75, 47, 26, 76, 48],\n\t\t[39, 54, 24, 14, 55, 25],\n\t\t[22, 45, 15, 41, 46, 16],\n\t\n\t\t// 36\n\t\t[6, 151, 121, 14, 152, 122],\n\t\t[6, 75, 47, 34, 76, 48],\n\t\t[46, 54, 24, 10, 55, 25],\n\t\t[2, 45, 15, 64, 46, 16],\n\t\n\t\t// 37\n\t\t[17, 152, 122, 4, 153, 123],\n\t\t[29, 74, 46, 14, 75, 47],\n\t\t[49, 54, 24, 10, 55, 25],\n\t\t[24, 45, 15, 46, 46, 16],\n\t\n\t\t// 38\n\t\t[4, 152, 122, 18, 153, 123],\n\t\t[13, 74, 46, 32, 75, 47],\n\t\t[48, 54, 24, 14, 55, 25],\n\t\t[42, 45, 15, 32, 46, 16],\n\t\n\t\t// 39\n\t\t[20, 147, 117, 4, 148, 118],\n\t\t[40, 75, 47, 7, 76, 48],\n\t\t[43, 54, 24, 22, 55, 25],\n\t\t[10, 45, 15, 67, 46, 16],\n\t\n\t\t// 40\n\t\t[19, 148, 118, 6, 149, 119],\n\t\t[18, 75, 47, 31, 76, 48],\n\t\t[34, 54, 24, 34, 55, 25],\n\t\t[20, 45, 15, 61, 46, 16]\n\t];\n\t\n\tQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\t\n\t\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\t\n\t\tif (rsBlock == undefined) {\n\t\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t\t}\n\t\n\t\tvar length = rsBlock.length / 3;\n\t\t\n\t\tvar list = new Array();\n\t\t\n\t\tfor (var i = 0; i < length; i++) {\n\t\n\t\t\tvar count = rsBlock[i * 3 + 0];\n\t\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\t\n\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn list;\n\t}\n\t\n\tQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\t\n\t\tswitch(errorCorrectLevel) {\n\t\tcase ECL.L :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\t\tcase ECL.M :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\t\tcase ECL.Q :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\t\tcase ECL.H :\n\t\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\t\tdefault :\n\t\t\treturn undefined;\n\t\t}\n\t}\n\t\n\tmodule.exports = QRRSBlock;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Mode = __webpack_require__(5);\n\tvar Polynomial = __webpack_require__(3);\n\tvar math = __webpack_require__(4);\n\t\n\tvar QRMaskPattern = {\n\t\tPATTERN000 : 0,\n\t\tPATTERN001 : 1,\n\t\tPATTERN010 : 2,\n\t\tPATTERN011 : 3,\n\t\tPATTERN100 : 4,\n\t\tPATTERN101 : 5,\n\t\tPATTERN110 : 6,\n\t\tPATTERN111 : 7\n\t};\n\t\n\tvar QRUtil = {\n\t\n\t    PATTERN_POSITION_TABLE : [\n\t\t    [],\n\t\t    [6, 18],\n\t\t    [6, 22],\n\t\t    [6, 26],\n\t\t    [6, 30],\n\t\t    [6, 34],\n\t\t    [6, 22, 38],\n\t\t    [6, 24, 42],\n\t\t    [6, 26, 46],\n\t\t    [6, 28, 50],\n\t\t    [6, 30, 54],\t\t\n\t\t    [6, 32, 58],\n\t\t    [6, 34, 62],\n\t\t    [6, 26, 46, 66],\n\t\t    [6, 26, 48, 70],\n\t\t    [6, 26, 50, 74],\n\t\t    [6, 30, 54, 78],\n\t\t    [6, 30, 56, 82],\n\t\t    [6, 30, 58, 86],\n\t\t    [6, 34, 62, 90],\n\t\t    [6, 28, 50, 72, 94],\n\t\t    [6, 26, 50, 74, 98],\n\t\t    [6, 30, 54, 78, 102],\n\t\t    [6, 28, 54, 80, 106],\n\t\t    [6, 32, 58, 84, 110],\n\t\t    [6, 30, 58, 86, 114],\n\t\t    [6, 34, 62, 90, 118],\n\t\t    [6, 26, 50, 74, 98, 122],\n\t\t    [6, 30, 54, 78, 102, 126],\n\t\t    [6, 26, 52, 78, 104, 130],\n\t\t    [6, 30, 56, 82, 108, 134],\n\t\t    [6, 34, 60, 86, 112, 138],\n\t\t    [6, 30, 58, 86, 114, 142],\n\t\t    [6, 34, 62, 90, 118, 146],\n\t\t    [6, 30, 54, 78, 102, 126, 150],\n\t\t    [6, 24, 50, 76, 102, 128, 154],\n\t\t    [6, 28, 54, 80, 106, 132, 158],\n\t\t    [6, 32, 58, 84, 110, 136, 162],\n\t\t    [6, 26, 54, 82, 110, 138, 166],\n\t\t    [6, 30, 58, 86, 114, 142, 170]\n\t    ],\n\t\n\t    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n\t    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n\t    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\t\n\t    getBCHTypeInfo : function(data) {\n\t\t    var d = data << 10;\n\t\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t\t    }\n\t\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n\t    },\n\t\n\t    getBCHTypeNumber : function(data) {\n\t\t    var d = data << 12;\n\t\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t\t    }\n\t\t    return (data << 12) | d;\n\t    },\n\t\n\t    getBCHDigit : function(data) {\n\t\n\t\t    var digit = 0;\n\t\n\t\t    while (data != 0) {\n\t\t\t    digit++;\n\t\t\t    data >>>= 1;\n\t\t    }\n\t\n\t\t    return digit;\n\t    },\n\t\n\t    getPatternPosition : function(typeNumber) {\n\t\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n\t    },\n\t\n\t    getMask : function(maskPattern, i, j) {\n\t\t    \n\t\t    switch (maskPattern) {\n\t\t\t    \n\t\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\t\n\t\t    default :\n\t\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t\t    }\n\t    },\n\t\n\t    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\t\n\t\t    var a = new Polynomial([1], 0);\n\t\n\t\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t\t    }\n\t\n\t\t    return a;\n\t    },\n\t\n\t    getLengthInBits : function(mode, type) {\n\t\n\t\t    if (1 <= type && type < 10) {\n\t\n\t\t\t    // 1 - 9\n\t\n\t\t\t    switch(mode) {\n\t\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t\t    default :\n\t\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t\t    }\n\t\n\t\t    } else if (type < 27) {\n\t\n\t\t\t    // 10 - 26\n\t\n\t\t\t    switch(mode) {\n\t\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t\t    default :\n\t\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t\t    }\n\t\n\t\t    } else if (type < 41) {\n\t\n\t\t\t    // 27 - 40\n\t\n\t\t\t    switch(mode) {\n\t\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t\t    default :\n\t\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t\t    }\n\t\n\t\t    } else {\n\t\t\t    throw new Error(\"type:\" + type);\n\t\t    }\n\t    },\n\t\n\t    getLostPoint : function(qrCode) {\n\t\t    \n\t\t    var moduleCount = qrCode.getModuleCount();\n\t\t    \n\t\t    var lostPoint = 0;\n\t\t    \n\t\t    // LEVEL1\n\t\t    \n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\n\t\t\t    for (var col = 0; col < moduleCount; col++) {\n\t\n\t\t\t\t    var sameCount = 0;\n\t\t\t\t    var dark = qrCode.isDark(row, col);\n\t\n\t\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\t\n\t\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\t\n\t\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\t\n\t\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t\t    continue;\n\t\t\t\t\t\t    }\n\t\n\t\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t\t    continue;\n\t\t\t\t\t\t    }\n\t\n\t\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t\t    }\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\n\t\t\t\t    if (sameCount > 5) {\n\t\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    // LEVEL2\n\t\n\t\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t\t    var count = 0;\n\t\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t\t    lostPoint += 3;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    // LEVEL3\n\t\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t\t    lostPoint += 40;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\t\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t\t    lostPoint += 40;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\n\t\t    // LEVEL4\n\t\t    \n\t\t    var darkCount = 0;\n\t\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\t\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t\t    darkCount++;\n\t\t\t\t    }\n\t\t\t    }\n\t\t    }\n\t\t    \n\t\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t\t    lostPoint += ratio * 10;\n\t\n\t\t    return lostPoint;\t\t\n\t    }\n\t};\n\t\n\tmodule.exports = QRUtil;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=app> <div id=device-menu> <header> YOUR UA </header> <ul class=list> <li class=item v-for=\\\"it in devices\\\" v-bind:class=\\\"active: sel\\\" v-on:click=onDevices(this)> {{$index+1}} {{it.name}} </li> </ul> </div> <div id=info> <h2>User Agent String explained :</h2> <div> <textarea>{{info.ua}}</textarea> </div> </div> <qrcode :val=deviceUrl size=128 bgc=#FFFFFF fgc=#000000 level=L></qrcode> </div>\";\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div> <canvas :style=\\\"{height: size + 'px', width: size + 'px'}\\\" height={{size}} width={{size}} v-el:qr></canvas> </div>\";\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(8)\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(9)\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(17)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.21\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (!this.prevKeys) return;\n\t\n\t    var i = this.prevKeys.length;\n\t    while (i--) {\n\t      var key = this.prevKeys[i];\n\t      if (!key) continue;\n\t\n\t      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n\t      for (var j = 0, l = keys.length; j < l; j++) {\n\t        toggleClasses(this.el, keys[j], removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (!obj[key]) continue;\n\t    toggleClasses(el, key, addClass);\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction toggleClasses(el, key, fn) {\n\t  key = key.trim();\n\t\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.21';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 7883084e0f41bb4b2f7c\n **/","/* eslint-disable */\nimport Vue from 'vue'\nimport App from './App.vue'\nimport conf from './conf.js'\n\nvar map = {}\n\n/**\n * 生成唯一标识码的方法\n * @returns {string}\n */\n\nfunction _uuid() {\n  function s4() {\n    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1)\n  }\n  return s4() + s4() + s4() + s4() + s4() + s4() + s4() + s4()\n}\n\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\nconsole.log(conf.originUrl)\n\nvar socket = io.connect(conf.originUrl + '/client')\n\nsocket.emit('client:init', {\n  cid: conf.cid\n})\n\nsocket.on('client:update' + conf.cid, function(data) {\n  if (!map[data.id]) {\n    map[data.id] = true\n    console.log(data)\n  }    \n})\n\nconsole.log('--')\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/* eslint-disable */\n\nvar originUrl = window.location.origin\nvar cid = localStorage.getItem('__iua_cid')\n\nif (!cid) {\n  cid = _uuid()\n  localStorage.setItem('__iua_cid', cid)\n}\n\n\nvar config = {\n\n  /**\n   */\n  cid: cid,\n\n  originUrl: originUrl\n\n}\n\nexport default config\n\n\n/** WEBPACK FOOTER **\n ** ./src/conf.js\n **/","module.exports = {\n\tL : 1,\n\tM : 0,\n\tQ : 3,\n\tH : 2\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/ErrorCorrectLevel.js\n ** module id = 2\n ** module chunks = 0\n **/","var math = require('./math');\n\nfunction QRPolynomial(num, shift) {\n\n\tif (num.length == undefined) {\n\t\tthrow new Error(num.length + \"/\" + shift);\n\t}\n\n\tvar offset = 0;\n\n\twhile (offset < num.length && num[offset] == 0) {\n\t\toffset++;\n\t}\n\n\tthis.num = new Array(num.length - offset + shift);\n\tfor (var i = 0; i < num.length - offset; i++) {\n\t\tthis.num[i] = num[i + offset];\n\t}\n}\n\nQRPolynomial.prototype = {\n\n\tget : function(index) {\n\t\treturn this.num[index];\n\t},\n\t\n\tgetLength : function() {\n\t\treturn this.num.length;\n\t},\n\t\n\tmultiply : function(e) {\n\t\n\t\tvar num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tfor (var j = 0; j < e.getLength(); j++) {\n\t\t\t\tnum[i + j] ^= math.gexp(math.glog(this.get(i) ) + math.glog(e.get(j) ) );\n\t\t\t}\n\t\t}\n\t\n\t\treturn new QRPolynomial(num, 0);\n\t},\n\t\n\tmod : function(e) {\n\t\n\t\tif (this.getLength() - e.getLength() < 0) {\n\t\t\treturn this;\n\t\t}\n\t\n\t\tvar ratio = math.glog(this.get(0) ) - math.glog(e.get(0) );\n\t\n\t\tvar num = new Array(this.getLength() );\n\t\t\n\t\tfor (var i = 0; i < this.getLength(); i++) {\n\t\t\tnum[i] = this.get(i);\n\t\t}\n\t\t\n\t\tfor (var i = 0; i < e.getLength(); i++) {\n\t\t\tnum[i] ^= math.gexp(math.glog(e.get(i) ) + ratio);\n\t\t}\n\t\n\t\t// recursive call\n\t\treturn new QRPolynomial(num, 0).mod(e);\n\t}\n};\n\nmodule.exports = QRPolynomial;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/Polynomial.js\n ** module id = 3\n ** module chunks = 0\n **/","var QRMath = {\n\n\tglog : function(n) {\n\t\n\t\tif (n < 1) {\n\t\t\tthrow new Error(\"glog(\" + n + \")\");\n\t\t}\n\t\t\n\t\treturn QRMath.LOG_TABLE[n];\n\t},\n\t\n\tgexp : function(n) {\n\t\n\t\twhile (n < 0) {\n\t\t\tn += 255;\n\t\t}\n\t\n\t\twhile (n >= 256) {\n\t\t\tn -= 255;\n\t\t}\n\t\n\t\treturn QRMath.EXP_TABLE[n];\n\t},\n\t\n\tEXP_TABLE : new Array(256),\n\t\n\tLOG_TABLE : new Array(256)\n\n};\n\t\nfor (var i = 0; i < 8; i++) {\n\tQRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n\tQRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n\t\t^ QRMath.EXP_TABLE[i - 5]\n\t\t^ QRMath.EXP_TABLE[i - 6]\n\t\t^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n\tQRMath.LOG_TABLE[QRMath.EXP_TABLE[i] ] = i;\n}\n\nmodule.exports = QRMath;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/math.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = {\n\tMODE_NUMBER :\t\t1 << 0,\n\tMODE_ALPHA_NUM : \t1 << 1,\n\tMODE_8BIT_BYTE : \t1 << 2,\n\tMODE_KANJI :\t\t1 << 3\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/mode.js\n ** module id = 5\n ** module chunks = 0\n **/","<template>\n  <div id=\"app\">\n    <div id=\"device-menu\">\n      <header>\n        YOUR UA\n      </header>\n      <ul class=\"list\">\n        <li class=\"item\"\n            v-for=\"it in devices\" \n            v-bind:class=\"active: sel\"\n            v-on:click=\"onDevices(this)\">\n            {{$index+1}}  {{it.name}}\n        </li>\n      </ul>\n    </div>\n    <div id=\"info\">\n      <h2>User Agent String explained :</h2>\n      <div>\n          <textarea>{{info.ua}}</textarea>\n      </div>    \n    </div>\n    <qrcode :val=\"deviceUrl\" size=\"128\" bgc=\"#FFFFFF\" fgc=\"#000000\" level=\"L\"></qrcode>\n  </div>\n</template>\n\n<script>\nimport qrcode from './components/qrcode.vue'\nimport conf from './conf.js'\n\nexport default {\n  data () {\n    return {\n      title: 'dashboard',\n      cid: conf.cid,\n      devices: [],\n      info: {\n        ua: ''\n      },\n      deviceUrl: ''\n    }\n  },\n  components: {\n    qrcode\n  },\n  created () {\n    this.deviceUrl = conf.originUrl + '/device/' + conf.cid\n  },\n  methods: {\n    fetch () {\n\n    },\n    onDevices (e) {\n      console.log(e)\n      this._resetTab()\n      e.$data.sel = true\n      this.info = e.$data.info\n    },\n    update (data) {\n      this._resetTab()\n      data.sel = true\n      this.devices.push(data)\n      this.info = data.info\n    },\n    _resetTab () {\n      this.devices.forEach(item => {\n        item.sel = false\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\nbody\n  margin 0\n  background-color white\n  height 100%\n\n#app\n  display -webkit-box\n  position absolute\n  width 100%\n  height 100%\n\n#device-menu\n  width 300px\n  background-image -webkit-linear-gradient(top,#664a86,#534292)\n  background-image linear-gradient(to bottom,#664a86,#534292)\n  background-color #534292\n  header\n    color white\n    font-size 32px\n    text-align center\n    padding 5px 0\n    padding-top 20px\n    padding-bottom 10px\n    box-shadow 0 1px 0 rgba(0,0,0,.1)\n    background-color rgba(0,0,0,.05)\n\n#info\n  -webkit-box-flex 1\n  width 20%\n  position relative\n  padding 20px\n\ntextarea\n  width 100%\n  height 50px\n  border 1px solid #DDD\n\n.list\n  display block\n  list-style none\n  padding 0\n  margin 10px 0\n  margin-top 20px\n\n.item\n  line-height 36px\n  display -webkit-box\n  padding 5px 10px\n  margin 10px\n  cursor pointer\n  color #fff\n  margin 0\n  font-size 18px\n  &:hover\n    background-color rgba(255,255,255,.2)\n  &.active\n    background-color rgba(0,0,0,.1)\n\n#qrcode\n  padding 10px\n\n.qrcode-tips\n  text-align center\n  color #333\n\n\n\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?26621898\n **/","<template>\n  <div>\n    <canvas\n      :style=\"{height: size + 'px', width: size + 'px'}\"\n      height={{size}}\n      width={{size}}\n      v-el:qr\n    ></canvas>\n  </div>\n</template>\n\n\n<script>\nimport qr from 'qr.js'\n\nexport default {\n  props: {\n    val: String,\n    size: 10,\n    // 'L', 'M', 'Q', 'H'\n    level: String,\n    bgc: String,\n    fgc: String\n  },\n  ready () {\n    var size = this.size\n    var bgc = this.bgc\n    var fgc = this.fgc\n    var $qr = this.$els.qr\n\n    var qrcode = qr(this.val)\n\n    var ctx = $qr.getContext('2d')\n    var cells = qrcode.modules\n    var tileW = size / cells.length\n    var tileH = size / cells.length\n    var scale = (window.devicePixelRatio || 1) / getBackingStorePixelRatio(ctx)\n\n    $qr.height = $qr.width = size * scale\n    ctx.scale(scale, scale)\n\n    cells.forEach(function (row, rdx) {\n      row.forEach(function (cell, cdx) {\n        ctx.fillStyle = cell ? fgc : bgc\n        var w = (Math.ceil((cdx + 1) * tileW) - Math.floor(cdx * tileW))\n        var h = (Math.ceil((rdx + 1) * tileH) - Math.floor(rdx * tileH))\n        ctx.fillRect(Math.round(cdx * tileW), Math.round(rdx * tileH), w, h)\n      })\n    })\n  }\n}\n\nfunction getBackingStorePixelRatio (ctx) {\n  return (\n    ctx.webkitBackingStorePixelRatio ||\n    ctx.mozBackingStorePixelRatio ||\n    ctx.msBackingStorePixelRatio ||\n    ctx.oBackingStorePixelRatio ||\n    ctx.backingStorePixelRatio ||\n    1\n  )\n}\n\n</script>\n\n<style>\n  \n\n</style>\n\n\n/** WEBPACK FOOTER **\n ** qrcode.vue?3eb46c99\n **/","var QRCode = require('./lib/QRCode');\r\nvar ErrorCorrectLevel = require('./lib/ErrorCorrectLevel');\r\n\r\nvar qrcode = function(data, opt) {\r\n\topt = opt || {};\r\n\tvar qr = new QRCode(opt.typeNumber || -1,\r\n\t\t\t\t\t\topt.errorCorrectLevel || ErrorCorrectLevel.H);\r\n\tqr.addData(data);\r\n\tqr.make();\r\n\r\n\treturn qr;\r\n};\r\n\r\nqrcode.ErrorCorrectLevel = ErrorCorrectLevel;\r\n\r\nmodule.exports = qrcode;\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/index.js\n ** module id = 10\n ** module chunks = 0\n **/","var mode = require('./mode');\n\nfunction QR8bitByte(data) {\n\tthis.mode = mode.MODE_8BIT_BYTE;\n\tthis.data = data;\n}\n\nQR8bitByte.prototype = {\n\n\tgetLength : function(buffer) {\n\t\treturn this.data.length;\n\t},\n\t\n\twrite : function(buffer) {\n\t\tfor (var i = 0; i < this.data.length; i++) {\n\t\t\t// not JIS ...\n\t\t\tbuffer.put(this.data.charCodeAt(i), 8);\n\t\t}\n\t}\n};\n\nmodule.exports = QR8bitByte;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/8BitByte.js\n ** module id = 11\n ** module chunks = 0\n **/","function QRBitBuffer() {\n\tthis.buffer = new Array();\n\tthis.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n\tget : function(index) {\n\t\tvar bufIndex = Math.floor(index / 8);\n\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n\t},\n\t\n\tput : function(num, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n\t\t}\n\t},\n\t\n\tgetLengthInBits : function() {\n\t\treturn this.length;\n\t},\n\t\n\tputBit : function(bit) {\n\t\n\t\tvar bufIndex = Math.floor(this.length / 8);\n\t\tif (this.buffer.length <= bufIndex) {\n\t\t\tthis.buffer.push(0);\n\t\t}\n\t\n\t\tif (bit) {\n\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n\t\t}\n\t\n\t\tthis.length++;\n\t}\n};\n\nmodule.exports = QRBitBuffer;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/BitBuffer.js\n ** module id = 12\n ** module chunks = 0\n **/","var BitByte = require('./8BitByte');\nvar RSBlock = require('./RSBlock');\nvar BitBuffer = require('./BitBuffer');\nvar util = require('./util');\nvar Polynomial = require('./Polynomial');\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n\tthis.typeNumber = typeNumber;\n\tthis.errorCorrectLevel = errorCorrectLevel;\n\tthis.modules = null;\n\tthis.moduleCount = 0;\n\tthis.dataCache = null;\n\tthis.dataList = [];\n}\n\n// for client side minification\nvar proto = QRCode.prototype;\n\nproto.addData = function(data) {\n\tvar newData = new BitByte(data);\n\tthis.dataList.push(newData);\n\tthis.dataCache = null;\n};\n\nproto.isDark = function(row, col) {\n\tif (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t\tthrow new Error(row + \",\" + col);\n\t}\n\treturn this.modules[row][col];\n};\n\nproto.getModuleCount = function() {\n\treturn this.moduleCount;\n};\n\nproto.make = function() {\n\t// Calculate automatically typeNumber if provided is < 1\n\tif (this.typeNumber < 1 ){\n\t\tvar typeNumber = 1;\n\t\tfor (typeNumber = 1; typeNumber < 40; typeNumber++) {\n\t\t\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, this.errorCorrectLevel);\n\n\t\t\tvar buffer = new BitBuffer();\n\t\t\tvar totalDataCount = 0;\n\t\t\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\t\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < this.dataList.length; i++) {\n\t\t\t\tvar data = this.dataList[i];\n\t\t\t\tbuffer.put(data.mode, 4);\n\t\t\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\t\t\tdata.write(buffer);\n\t\t\t}\n\t\t\tif (buffer.getLengthInBits() <= totalDataCount * 8)\n\t\t\t\tbreak;\n\t\t}\n\t\tthis.typeNumber = typeNumber;\n\t}\n\tthis.makeImpl(false, this.getBestMaskPattern() );\n};\n\nproto.makeImpl = function(test, maskPattern) {\n\t\n\tthis.moduleCount = this.typeNumber * 4 + 17;\n\tthis.modules = new Array(this.moduleCount);\n\t\n\tfor (var row = 0; row < this.moduleCount; row++) {\n\t\t\n\t\tthis.modules[row] = new Array(this.moduleCount);\n\t\t\n\t\tfor (var col = 0; col < this.moduleCount; col++) {\n\t\t\tthis.modules[row][col] = null;//(col + row) % 3;\n\t\t}\n\t}\n\n\tthis.setupPositionProbePattern(0, 0);\n\tthis.setupPositionProbePattern(this.moduleCount - 7, 0);\n\tthis.setupPositionProbePattern(0, this.moduleCount - 7);\n\tthis.setupPositionAdjustPattern();\n\tthis.setupTimingPattern();\n\tthis.setupTypeInfo(test, maskPattern);\n\t\n\tif (this.typeNumber >= 7) {\n\t\tthis.setupTypeNumber(test);\n\t}\n\n\tif (this.dataCache == null) {\n\t\tthis.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t}\n\n\tthis.mapData(this.dataCache, maskPattern);\n};\n\nproto.setupPositionProbePattern = function(row, col)  {\n\t\n\tfor (var r = -1; r <= 7; r++) {\n\t\t\n\t\tif (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\t\n\t\tfor (var c = -1; c <= 7; c++) {\n\t\t\t\n\t\t\tif (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\t\t\n\t\t\tif ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n\t\t\t\t\t|| (0 <= c && c <= 6 && (r == 0 || r == 6) )\n\t\t\t\t\t|| (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t} else {\n\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t}\n\t\t}\t\t\n\t}\t\t\n};\n\nproto.getBestMaskPattern = function() {\n\n\tvar minLostPoint = 0;\n\tvar pattern = 0;\n\n\tfor (var i = 0; i < 8; i++) {\n\t\t\n\t\tthis.makeImpl(true, i);\n\n\t\tvar lostPoint = util.getLostPoint(this);\n\n\t\tif (i == 0 || minLostPoint >  lostPoint) {\n\t\t\tminLostPoint = lostPoint;\n\t\t\tpattern = i;\n\t\t}\n\t}\n\n\treturn pattern;\n};\n\nproto.createMovieClip = function(target_mc, instance_name, depth) {\n\n\tvar qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n\tvar cs = 1;\n\n\tthis.make();\n\n\tfor (var row = 0; row < this.modules.length; row++) {\n\t\t\n\t\tvar y = row * cs;\n\t\t\n\t\tfor (var col = 0; col < this.modules[row].length; col++) {\n\n\t\t\tvar x = col * cs;\n\t\t\tvar dark = this.modules[row][col];\n\t\t\n\t\t\tif (dark) {\n\t\t\t\tqr_mc.beginFill(0, 100);\n\t\t\t\tqr_mc.moveTo(x, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y);\n\t\t\t\tqr_mc.lineTo(x + cs, y + cs);\n\t\t\t\tqr_mc.lineTo(x, y + cs);\n\t\t\t\tqr_mc.endFill();\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn qr_mc;\n};\n\nproto.setupTimingPattern = function() {\n\t\n\tfor (var r = 8; r < this.moduleCount - 8; r++) {\n\t\tif (this.modules[r][6] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[r][6] = (r % 2 == 0);\n\t}\n\n\tfor (var c = 8; c < this.moduleCount - 8; c++) {\n\t\tif (this.modules[6][c] != null) {\n\t\t\tcontinue;\n\t\t}\n\t\tthis.modules[6][c] = (c % 2 == 0);\n\t}\n};\n\nproto.setupPositionAdjustPattern = function() {\n\n\tvar pos = util.getPatternPosition(this.typeNumber);\n\t\n\tfor (var i = 0; i < pos.length; i++) {\n\t\n\t\tfor (var j = 0; j < pos.length; j++) {\n\t\t\n\t\t\tvar row = pos[i];\n\t\t\tvar col = pos[j];\n\t\t\t\n\t\t\tif (this.modules[row][col] != null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (var r = -2; r <= 2; r++) {\n\t\t\t\n\t\t\t\tfor (var c = -2; c <= 2; c++) {\n\t\t\t\t\n\t\t\t\t\tif (r == -2 || r == 2 || c == -2 || c == 2\n\t\t\t\t\t\t\t|| (r == 0 && c == 0) ) {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.modules[row + r][col + c] = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\nproto.setupTypeNumber = function(test) {\n\n\tvar bits = util.getBCHTypeNumber(this.typeNumber);\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t}\n\n\tfor (var i = 0; i < 18; i++) {\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\tthis.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t}\n};\n\nproto.setupTypeInfo = function(test, maskPattern) {\n\n\tvar data = (this.errorCorrectLevel << 3) | maskPattern;\n\tvar bits = util.getBCHTypeInfo(data);\n\n\t// vertical\t\t\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\n\t\tif (i < 6) {\n\t\t\tthis.modules[i][8] = mod;\n\t\t} else if (i < 8) {\n\t\t\tthis.modules[i + 1][8] = mod;\n\t\t} else {\n\t\t\tthis.modules[this.moduleCount - 15 + i][8] = mod;\n\t\t}\n\t}\n\n\t// horizontal\n\tfor (var i = 0; i < 15; i++) {\n\n\t\tvar mod = (!test && ( (bits >> i) & 1) == 1);\n\t\t\n\t\tif (i < 8) {\n\t\t\tthis.modules[8][this.moduleCount - i - 1] = mod;\n\t\t} else if (i < 9) {\n\t\t\tthis.modules[8][15 - i - 1 + 1] = mod;\n\t\t} else {\n\t\t\tthis.modules[8][15 - i - 1] = mod;\n\t\t}\n\t}\n\n\t// fixed module\n\tthis.modules[this.moduleCount - 8][8] = (!test);\n};\n\nproto.mapData = function(data, maskPattern) {\n\t\n\tvar inc = -1;\n\tvar row = this.moduleCount - 1;\n\tvar bitIndex = 7;\n\tvar byteIndex = 0;\n\t\n\tfor (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n\t\tif (col == 6) col--;\n\n\t\twhile (true) {\n\n\t\t\tfor (var c = 0; c < 2; c++) {\n\t\t\t\t\n\t\t\t\tif (this.modules[row][col - c] == null) {\n\t\t\t\t\t\n\t\t\t\t\tvar dark = false;\n\n\t\t\t\t\tif (byteIndex < data.length) {\n\t\t\t\t\t\tdark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mask = util.getMask(maskPattern, row, col - c);\n\n\t\t\t\t\tif (mask) {\n\t\t\t\t\t\tdark = !dark;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.modules[row][col - c] = dark;\n\t\t\t\t\tbitIndex--;\n\n\t\t\t\t\tif (bitIndex == -1) {\n\t\t\t\t\t\tbyteIndex++;\n\t\t\t\t\t\tbitIndex = 7;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\trow += inc;\n\n\t\t\tif (row < 0 || this.moduleCount <= row) {\n\t\t\t\trow -= inc;\n\t\t\t\tinc = -inc;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function(typeNumber, errorCorrectLevel, dataList) {\n\t\n\tvar rsBlocks = RSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\tvar buffer = new BitBuffer();\n\t\n\tfor (var i = 0; i < dataList.length; i++) {\n\t\tvar data = dataList[i];\n\t\tbuffer.put(data.mode, 4);\n\t\tbuffer.put(data.getLength(), util.getLengthInBits(data.mode, typeNumber) );\n\t\tdata.write(buffer);\n\t}\n\n\t// calc num max data.\n\tvar totalDataCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalDataCount += rsBlocks[i].dataCount;\n\t}\n\n\tif (buffer.getLengthInBits() > totalDataCount * 8) {\n\t\tthrow new Error(\"code length overflow. (\"\n\t\t\t+ buffer.getLengthInBits()\n\t\t\t+ \">\"\n\t\t\t+  totalDataCount * 8\n\t\t\t+ \")\");\n\t}\n\n\t// end code\n\tif (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t\tbuffer.put(0, 4);\n\t}\n\n\t// padding\n\twhile (buffer.getLengthInBits() % 8 != 0) {\n\t\tbuffer.putBit(false);\n\t}\n\n\t// padding\n\twhile (true) {\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD0, 8);\n\t\t\n\t\tif (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t\t\tbreak;\n\t\t}\n\t\tbuffer.put(QRCode.PAD1, 8);\n\t}\n\n\treturn QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function(buffer, rsBlocks) {\n\n\tvar offset = 0;\n\t\n\tvar maxDcCount = 0;\n\tvar maxEcCount = 0;\n\t\n\tvar dcdata = new Array(rsBlocks.length);\n\tvar ecdata = new Array(rsBlocks.length);\n\t\n\tfor (var r = 0; r < rsBlocks.length; r++) {\n\n\t\tvar dcCount = rsBlocks[r].dataCount;\n\t\tvar ecCount = rsBlocks[r].totalCount - dcCount;\n\n\t\tmaxDcCount = Math.max(maxDcCount, dcCount);\n\t\tmaxEcCount = Math.max(maxEcCount, ecCount);\n\t\t\n\t\tdcdata[r] = new Array(dcCount);\n\t\t\n\t\tfor (var i = 0; i < dcdata[r].length; i++) {\n\t\t\tdcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t\t}\n\t\toffset += dcCount;\n\t\t\n\t\tvar rsPoly = util.getErrorCorrectPolynomial(ecCount);\n\t\tvar rawPoly = new Polynomial(dcdata[r], rsPoly.getLength() - 1);\n\n\t\tvar modPoly = rawPoly.mod(rsPoly);\n\t\tecdata[r] = new Array(rsPoly.getLength() - 1);\n\t\tfor (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t\t\tecdata[r][i] = (modIndex >= 0)? modPoly.get(modIndex) : 0;\n\t\t}\n\n\t}\n\t\n\tvar totalCodeCount = 0;\n\tfor (var i = 0; i < rsBlocks.length; i++) {\n\t\ttotalCodeCount += rsBlocks[i].totalCount;\n\t}\n\n\tvar data = new Array(totalCodeCount);\n\tvar index = 0;\n\n\tfor (var i = 0; i < maxDcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < dcdata[r].length) {\n\t\t\t\tdata[index++] = dcdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (var i = 0; i < maxEcCount; i++) {\n\t\tfor (var r = 0; r < rsBlocks.length; r++) {\n\t\t\tif (i < ecdata[r].length) {\n\t\t\t\tdata[index++] = ecdata[r][i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn data;\n};\n\nmodule.exports = QRCode;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/QRCode.js\n ** module id = 13\n ** module chunks = 0\n **/","// ErrorCorrectLevel\nvar ECL = require('./ErrorCorrectLevel');\n\nfunction QRRSBlock(totalCount, dataCount) {\n\tthis.totalCount = totalCount;\n\tthis.dataCount  = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n\n\t// L\n\t// M\n\t// Q\n\t// H\n\n\t// 1\n\t[1, 26, 19],\n\t[1, 26, 16],\n\t[1, 26, 13],\n\t[1, 26, 9],\n\t\n\t// 2\n\t[1, 44, 34],\n\t[1, 44, 28],\n\t[1, 44, 22],\n\t[1, 44, 16],\n\n\t// 3\n\t[1, 70, 55],\n\t[1, 70, 44],\n\t[2, 35, 17],\n\t[2, 35, 13],\n\n\t// 4\t\t\n\t[1, 100, 80],\n\t[2, 50, 32],\n\t[2, 50, 24],\n\t[4, 25, 9],\n\t\n\t// 5\n\t[1, 134, 108],\n\t[2, 67, 43],\n\t[2, 33, 15, 2, 34, 16],\n\t[2, 33, 11, 2, 34, 12],\n\t\n\t// 6\n\t[2, 86, 68],\n\t[4, 43, 27],\n\t[4, 43, 19],\n\t[4, 43, 15],\n\t\n\t// 7\t\t\n\t[2, 98, 78],\n\t[4, 49, 31],\n\t[2, 32, 14, 4, 33, 15],\n\t[4, 39, 13, 1, 40, 14],\n\t\n\t// 8\n\t[2, 121, 97],\n\t[2, 60, 38, 2, 61, 39],\n\t[4, 40, 18, 2, 41, 19],\n\t[4, 40, 14, 2, 41, 15],\n\t\n\t// 9\n\t[2, 146, 116],\n\t[3, 58, 36, 2, 59, 37],\n\t[4, 36, 16, 4, 37, 17],\n\t[4, 36, 12, 4, 37, 13],\n\t\n\t// 10\t\t\n\t[2, 86, 68, 2, 87, 69],\n\t[4, 69, 43, 1, 70, 44],\n\t[6, 43, 19, 2, 44, 20],\n\t[6, 43, 15, 2, 44, 16],\n\n\t// 11\n\t[4, 101, 81],\n\t[1, 80, 50, 4, 81, 51],\n\t[4, 50, 22, 4, 51, 23],\n\t[3, 36, 12, 8, 37, 13],\n\n\t// 12\n\t[2, 116, 92, 2, 117, 93],\n\t[6, 58, 36, 2, 59, 37],\n\t[4, 46, 20, 6, 47, 21],\n\t[7, 42, 14, 4, 43, 15],\n\n\t// 13\n\t[4, 133, 107],\n\t[8, 59, 37, 1, 60, 38],\n\t[8, 44, 20, 4, 45, 21],\n\t[12, 33, 11, 4, 34, 12],\n\n\t// 14\n\t[3, 145, 115, 1, 146, 116],\n\t[4, 64, 40, 5, 65, 41],\n\t[11, 36, 16, 5, 37, 17],\n\t[11, 36, 12, 5, 37, 13],\n\n\t// 15\n\t[5, 109, 87, 1, 110, 88],\n\t[5, 65, 41, 5, 66, 42],\n\t[5, 54, 24, 7, 55, 25],\n\t[11, 36, 12],\n\n\t// 16\n\t[5, 122, 98, 1, 123, 99],\n\t[7, 73, 45, 3, 74, 46],\n\t[15, 43, 19, 2, 44, 20],\n\t[3, 45, 15, 13, 46, 16],\n\n\t// 17\n\t[1, 135, 107, 5, 136, 108],\n\t[10, 74, 46, 1, 75, 47],\n\t[1, 50, 22, 15, 51, 23],\n\t[2, 42, 14, 17, 43, 15],\n\n\t// 18\n\t[5, 150, 120, 1, 151, 121],\n\t[9, 69, 43, 4, 70, 44],\n\t[17, 50, 22, 1, 51, 23],\n\t[2, 42, 14, 19, 43, 15],\n\n\t// 19\n\t[3, 141, 113, 4, 142, 114],\n\t[3, 70, 44, 11, 71, 45],\n\t[17, 47, 21, 4, 48, 22],\n\t[9, 39, 13, 16, 40, 14],\n\n\t// 20\n\t[3, 135, 107, 5, 136, 108],\n\t[3, 67, 41, 13, 68, 42],\n\t[15, 54, 24, 5, 55, 25],\n\t[15, 43, 15, 10, 44, 16],\n\n\t// 21\n\t[4, 144, 116, 4, 145, 117],\n\t[17, 68, 42],\n\t[17, 50, 22, 6, 51, 23],\n\t[19, 46, 16, 6, 47, 17],\n\n\t// 22\n\t[2, 139, 111, 7, 140, 112],\n\t[17, 74, 46],\n\t[7, 54, 24, 16, 55, 25],\n\t[34, 37, 13],\n\n\t// 23\n\t[4, 151, 121, 5, 152, 122],\n\t[4, 75, 47, 14, 76, 48],\n\t[11, 54, 24, 14, 55, 25],\n\t[16, 45, 15, 14, 46, 16],\n\n\t// 24\n\t[6, 147, 117, 4, 148, 118],\n\t[6, 73, 45, 14, 74, 46],\n\t[11, 54, 24, 16, 55, 25],\n\t[30, 46, 16, 2, 47, 17],\n\n\t// 25\n\t[8, 132, 106, 4, 133, 107],\n\t[8, 75, 47, 13, 76, 48],\n\t[7, 54, 24, 22, 55, 25],\n\t[22, 45, 15, 13, 46, 16],\n\n\t// 26\n\t[10, 142, 114, 2, 143, 115],\n\t[19, 74, 46, 4, 75, 47],\n\t[28, 50, 22, 6, 51, 23],\n\t[33, 46, 16, 4, 47, 17],\n\n\t// 27\n\t[8, 152, 122, 4, 153, 123],\n\t[22, 73, 45, 3, 74, 46],\n\t[8, 53, 23, 26, 54, 24],\n\t[12, 45, 15, 28, 46, 16],\n\n\t// 28\n\t[3, 147, 117, 10, 148, 118],\n\t[3, 73, 45, 23, 74, 46],\n\t[4, 54, 24, 31, 55, 25],\n\t[11, 45, 15, 31, 46, 16],\n\n\t// 29\n\t[7, 146, 116, 7, 147, 117],\n\t[21, 73, 45, 7, 74, 46],\n\t[1, 53, 23, 37, 54, 24],\n\t[19, 45, 15, 26, 46, 16],\n\n\t// 30\n\t[5, 145, 115, 10, 146, 116],\n\t[19, 75, 47, 10, 76, 48],\n\t[15, 54, 24, 25, 55, 25],\n\t[23, 45, 15, 25, 46, 16],\n\n\t// 31\n\t[13, 145, 115, 3, 146, 116],\n\t[2, 74, 46, 29, 75, 47],\n\t[42, 54, 24, 1, 55, 25],\n\t[23, 45, 15, 28, 46, 16],\n\n\t// 32\n\t[17, 145, 115],\n\t[10, 74, 46, 23, 75, 47],\n\t[10, 54, 24, 35, 55, 25],\n\t[19, 45, 15, 35, 46, 16],\n\n\t// 33\n\t[17, 145, 115, 1, 146, 116],\n\t[14, 74, 46, 21, 75, 47],\n\t[29, 54, 24, 19, 55, 25],\n\t[11, 45, 15, 46, 46, 16],\n\n\t// 34\n\t[13, 145, 115, 6, 146, 116],\n\t[14, 74, 46, 23, 75, 47],\n\t[44, 54, 24, 7, 55, 25],\n\t[59, 46, 16, 1, 47, 17],\n\n\t// 35\n\t[12, 151, 121, 7, 152, 122],\n\t[12, 75, 47, 26, 76, 48],\n\t[39, 54, 24, 14, 55, 25],\n\t[22, 45, 15, 41, 46, 16],\n\n\t// 36\n\t[6, 151, 121, 14, 152, 122],\n\t[6, 75, 47, 34, 76, 48],\n\t[46, 54, 24, 10, 55, 25],\n\t[2, 45, 15, 64, 46, 16],\n\n\t// 37\n\t[17, 152, 122, 4, 153, 123],\n\t[29, 74, 46, 14, 75, 47],\n\t[49, 54, 24, 10, 55, 25],\n\t[24, 45, 15, 46, 46, 16],\n\n\t// 38\n\t[4, 152, 122, 18, 153, 123],\n\t[13, 74, 46, 32, 75, 47],\n\t[48, 54, 24, 14, 55, 25],\n\t[42, 45, 15, 32, 46, 16],\n\n\t// 39\n\t[20, 147, 117, 4, 148, 118],\n\t[40, 75, 47, 7, 76, 48],\n\t[43, 54, 24, 22, 55, 25],\n\t[10, 45, 15, 67, 46, 16],\n\n\t// 40\n\t[19, 148, 118, 6, 149, 119],\n\t[18, 75, 47, 31, 76, 48],\n\t[34, 54, 24, 34, 55, 25],\n\t[20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function(typeNumber, errorCorrectLevel) {\n\t\n\tvar rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\tif (rsBlock == undefined) {\n\t\tthrow new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t}\n\n\tvar length = rsBlock.length / 3;\n\t\n\tvar list = new Array();\n\t\n\tfor (var i = 0; i < length; i++) {\n\n\t\tvar count = rsBlock[i * 3 + 0];\n\t\tvar totalCount = rsBlock[i * 3 + 1];\n\t\tvar dataCount  = rsBlock[i * 3 + 2];\n\n\t\tfor (var j = 0; j < count; j++) {\n\t\t\tlist.push(new QRRSBlock(totalCount, dataCount) );\t\n\t\t}\n\t}\n\t\n\treturn list;\n}\n\nQRRSBlock.getRsBlockTable = function(typeNumber, errorCorrectLevel) {\n\n\tswitch(errorCorrectLevel) {\n\tcase ECL.L :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\tcase ECL.M :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\tcase ECL.Q :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\tcase ECL.H :\n\t\treturn QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\tdefault :\n\t\treturn undefined;\n\t}\n}\n\nmodule.exports = QRRSBlock;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/RSBlock.js\n ** module id = 14\n ** module chunks = 0\n **/","var Mode = require('./mode');\nvar Polynomial = require('./Polynomial');\nvar math = require('./math');\n\nvar QRMaskPattern = {\n\tPATTERN000 : 0,\n\tPATTERN001 : 1,\n\tPATTERN010 : 2,\n\tPATTERN011 : 3,\n\tPATTERN100 : 4,\n\tPATTERN101 : 5,\n\tPATTERN110 : 6,\n\tPATTERN111 : 7\n};\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE : [\n\t    [],\n\t    [6, 18],\n\t    [6, 22],\n\t    [6, 26],\n\t    [6, 30],\n\t    [6, 34],\n\t    [6, 22, 38],\n\t    [6, 24, 42],\n\t    [6, 26, 46],\n\t    [6, 28, 50],\n\t    [6, 30, 54],\t\t\n\t    [6, 32, 58],\n\t    [6, 34, 62],\n\t    [6, 26, 46, 66],\n\t    [6, 26, 48, 70],\n\t    [6, 26, 50, 74],\n\t    [6, 30, 54, 78],\n\t    [6, 30, 56, 82],\n\t    [6, 30, 58, 86],\n\t    [6, 34, 62, 90],\n\t    [6, 28, 50, 72, 94],\n\t    [6, 26, 50, 74, 98],\n\t    [6, 30, 54, 78, 102],\n\t    [6, 28, 54, 80, 106],\n\t    [6, 32, 58, 84, 110],\n\t    [6, 30, 58, 86, 114],\n\t    [6, 34, 62, 90, 118],\n\t    [6, 26, 50, 74, 98, 122],\n\t    [6, 30, 54, 78, 102, 126],\n\t    [6, 26, 52, 78, 104, 130],\n\t    [6, 30, 56, 82, 108, 134],\n\t    [6, 34, 60, 86, 112, 138],\n\t    [6, 30, 58, 86, 114, 142],\n\t    [6, 34, 62, 90, 118, 146],\n\t    [6, 30, 54, 78, 102, 126, 150],\n\t    [6, 24, 50, 76, 102, 128, 154],\n\t    [6, 28, 54, 80, 106, 132, 158],\n\t    [6, 32, 58, 84, 110, 136, 162],\n\t    [6, 26, 54, 82, 110, 138, 166],\n\t    [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15 : (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18 : (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK : (1 << 14) | (1 << 12) | (1 << 10)\t| (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo : function(data) {\n\t    var d = data << 10;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t\t    d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) ); \t\n\t    }\n\t    return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber : function(data) {\n\t    var d = data << 12;\n\t    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t\t    d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) ); \t\n\t    }\n\t    return (data << 12) | d;\n    },\n\n    getBCHDigit : function(data) {\n\n\t    var digit = 0;\n\n\t    while (data != 0) {\n\t\t    digit++;\n\t\t    data >>>= 1;\n\t    }\n\n\t    return digit;\n    },\n\n    getPatternPosition : function(typeNumber) {\n\t    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask : function(maskPattern, i, j) {\n\t    \n\t    switch (maskPattern) {\n\t\t    \n\t    case QRMaskPattern.PATTERN000 : return (i + j) % 2 == 0;\n\t    case QRMaskPattern.PATTERN001 : return i % 2 == 0;\n\t    case QRMaskPattern.PATTERN010 : return j % 3 == 0;\n\t    case QRMaskPattern.PATTERN011 : return (i + j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN100 : return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n\t    case QRMaskPattern.PATTERN101 : return (i * j) % 2 + (i * j) % 3 == 0;\n\t    case QRMaskPattern.PATTERN110 : return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n\t    case QRMaskPattern.PATTERN111 : return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n\t    default :\n\t\t    throw new Error(\"bad maskPattern:\" + maskPattern);\n\t    }\n    },\n\n    getErrorCorrectPolynomial : function(errorCorrectLength) {\n\n\t    var a = new Polynomial([1], 0);\n\n\t    for (var i = 0; i < errorCorrectLength; i++) {\n\t\t    a = a.multiply(new Polynomial([1, math.gexp(i)], 0) );\n\t    }\n\n\t    return a;\n    },\n\n    getLengthInBits : function(mode, type) {\n\n\t    if (1 <= type && type < 10) {\n\n\t\t    // 1 - 9\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 10;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 9;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 8;\n\t\t    case Mode.MODE_KANJI  \t: return 8;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 27) {\n\n\t\t    // 10 - 26\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 12;\n\t\t    case Mode.MODE_ALPHA_NUM \t: return 11;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 10;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else if (type < 41) {\n\n\t\t    // 27 - 40\n\n\t\t    switch(mode) {\n\t\t    case Mode.MODE_NUMBER \t: return 14;\n\t\t    case Mode.MODE_ALPHA_NUM\t: return 13;\n\t\t    case Mode.MODE_8BIT_BYTE\t: return 16;\n\t\t    case Mode.MODE_KANJI  \t: return 12;\n\t\t    default :\n\t\t\t    throw new Error(\"mode:\" + mode);\n\t\t    }\n\n\t    } else {\n\t\t    throw new Error(\"type:\" + type);\n\t    }\n    },\n\n    getLostPoint : function(qrCode) {\n\t    \n\t    var moduleCount = qrCode.getModuleCount();\n\t    \n\t    var lostPoint = 0;\n\t    \n\t    // LEVEL1\n\t    \n\t    for (var row = 0; row < moduleCount; row++) {\n\n\t\t    for (var col = 0; col < moduleCount; col++) {\n\n\t\t\t    var sameCount = 0;\n\t\t\t    var dark = qrCode.isDark(row, col);\n\n\t\t\t\tfor (var r = -1; r <= 1; r++) {\n\n\t\t\t\t    if (row + r < 0 || moduleCount <= row + r) {\n\t\t\t\t\t    continue;\n\t\t\t\t    }\n\n\t\t\t\t    for (var c = -1; c <= 1; c++) {\n\n\t\t\t\t\t    if (col + c < 0 || moduleCount <= col + c) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (r == 0 && c == 0) {\n\t\t\t\t\t\t    continue;\n\t\t\t\t\t    }\n\n\t\t\t\t\t    if (dark == qrCode.isDark(row + r, col + c) ) {\n\t\t\t\t\t\t    sameCount++;\n\t\t\t\t\t    }\n\t\t\t\t    }\n\t\t\t    }\n\n\t\t\t    if (sameCount > 5) {\n\t\t\t\t    lostPoint += (3 + sameCount - 5);\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL2\n\n\t    for (var row = 0; row < moduleCount - 1; row++) {\n\t\t    for (var col = 0; col < moduleCount - 1; col++) {\n\t\t\t    var count = 0;\n\t\t\t    if (qrCode.isDark(row,     col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col    ) ) count++;\n\t\t\t    if (qrCode.isDark(row,     col + 1) ) count++;\n\t\t\t    if (qrCode.isDark(row + 1, col + 1) ) count++;\n\t\t\t    if (count == 0 || count == 4) {\n\t\t\t\t    lostPoint += 3;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL3\n\n\t    for (var row = 0; row < moduleCount; row++) {\n\t\t    for (var col = 0; col < moduleCount - 6; col++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 1)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 2)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 3)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 4)\n\t\t\t\t\t    && !qrCode.isDark(row, col + 5)\n\t\t\t\t\t    &&  qrCode.isDark(row, col + 6) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount - 6; row++) {\n\t\t\t    if (qrCode.isDark(row, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 1, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 2, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 3, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 4, col)\n\t\t\t\t\t    && !qrCode.isDark(row + 5, col)\n\t\t\t\t\t    &&  qrCode.isDark(row + 6, col) ) {\n\t\t\t\t    lostPoint += 40;\n\t\t\t    }\n\t\t    }\n\t    }\n\n\t    // LEVEL4\n\t    \n\t    var darkCount = 0;\n\n\t    for (var col = 0; col < moduleCount; col++) {\n\t\t    for (var row = 0; row < moduleCount; row++) {\n\t\t\t    if (qrCode.isDark(row, col) ) {\n\t\t\t\t    darkCount++;\n\t\t\t    }\n\t\t    }\n\t    }\n\t    \n\t    var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t    lostPoint += ratio * 10;\n\n\t    return lostPoint;\t\t\n    }\n};\n\nmodule.exports = QRUtil;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/qr.js/lib/util.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div id=app> <div id=device-menu> <header> YOUR UA </header> <ul class=list> <li class=item v-for=\\\"it in devices\\\" v-bind:class=\\\"active: sel\\\" v-on:click=onDevices(this)> {{$index+1}} {{it.name}} </li> </ul> </div> <div id=info> <h2>User Agent String explained :</h2> <div> <textarea>{{info.ua}}</textarea> </div> </div> <qrcode :val=deviceUrl size=128 bgc=#FFFFFF fgc=#000000 level=L></qrcode> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<div> <canvas :style=\\\"{height: size + 'px', width: size + 'px'}\\\" height={{size}} width={{size}} v-el:qr></canvas> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/qrcode.vue\n ** module id = 17\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!stylus-loader?sourceMap!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 18\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./qrcode.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./qrcode.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./qrcode.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/qrcode.vue\n ** module id = 19\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.21\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : getPath(value, trackByKey) : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n  if (camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (!this.prevKeys) return;\n\n    var i = this.prevKeys.length;\n    while (i--) {\n      var key = this.prevKeys[i];\n      if (!key) continue;\n\n      var keys = isPlainObject(key) ? Object.keys(key) : [key];\n      for (var j = 0, l = keys.length; j < l; j++) {\n        toggleClasses(this.el, keys[j], removeClass);\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (!obj[key]) continue;\n    toggleClasses(el, key, addClass);\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction toggleClasses(el, key, fn) {\n  key = key.trim();\n\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\" ' + 'expects a function value, got ' + handler, vm);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.21';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 20\n ** module chunks = 0\n **/"],"sourceRoot":""}